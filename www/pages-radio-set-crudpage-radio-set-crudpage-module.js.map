{"version":3,"sources":["./src/app/pages/radio-set-crudpage/radio-set-crudpage.page.html","./src/app/pages/radio-set-crudpage/radio-set-crudpage.page.ts","./src/app/pages/radio-set-crudpage/radio-set-crudpage-routing.module.ts","./src/app/pages/radio-set-crudpage/radio-set-crudpage.module.ts","./src/app/classes/radioset.ts","./src/app/pages/radio-set-crudpage/radio-set-crudpage.page.scss"],"names":[],"mappings":"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","file":"pages-radio-set-crudpage-radio-set-crudpage-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>RadioSetCRUDPage</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <p *ngIf=\\\"!(isadmin)\\\">Please, choose a radioset if it already exists</p>\\n  <ion-item *ngIf=\\\"!(isadmin)\\\">\\n    <ion-select [(ngModel)]=\\\"equipment\\\" (ionChange)=\\\"updateRadio()\\\" placeholder=\\\"Equipment\\\">\\n      <ion-select-option *ngFor=\\\"let radioset of radioSetTotal\\\" [value]=\\\"radioset\\\">{{ radioset.name }}</ion-select-option>\\n    </ion-select></ion-item>\\n  <br>\\n  <p>Brand</p>\\n<ion-input [(ngModel)]=\\\"brand\\\"></ion-input>\\n<p>Name</p>\\n<ion-input [(ngModel)]=\\\"name\\\"></ion-input>\\n<p>Type</p>\\n<ion-input [(ngModel)]=\\\"type\\\"></ion-input>\\n<p>Amplitude</p>\\n<ion-input [(ngModel)]=\\\"amplitude\\\"></ion-input>\\n<p>Price</p>\\n<ion-input [(ngModel)]=\\\"price\\\"></ion-input>\\n<ion-button (click)=\\\"submit()\\\" *ngIf=\\\"brand && name && type && amplitude\\\">Submit</ion-button>\\n<ion-button (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n\\n</ion-content>\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport {FirebaseUpdaterAndSetterService} from '../../services/firebase-updater-and-setter.service';\nimport { RadioSet } from '../../classes/radioset';\nimport {ModalController} from '@ionic/angular'\nimport { FirebaseObtainerService } from '../../services/firebase-obtainer.service';\n@Component({\n  selector: 'app-radio-set-crudpage',\n  templateUrl: './radio-set-crudpage.page.html',\n  styleUrls: ['./radio-set-crudpage.page.scss'],\n})\nexport class RadioSetCRUDPagePage implements OnInit {\n@Input() brand: string = null;\n@Input() name: string = null;\n@Input() type: string = null;\n@Input() amplitude: string = null;\n@Input() radio: RadioSet = null;\n@Input() result: boolean = null;\n@Input() id?: string = undefined;\n@Input() price: number = null;\n@Input() isadmin: boolean;\nradioSetTotal: RadioSet[] = [];\nequipment: RadioSet;\n  constructor(private firebaseUpdaterAndSetter: FirebaseUpdaterAndSetterService, private firebaseObtainerService: FirebaseObtainerService, private modalController: ModalController) { }\n\n  ngOnInit() {\n    this.firebaseObtainerService.listAllRadioSets().then(ants => {\n      ants.forEach(ant => {\n        this.radioSetTotal.push(ant.val() as unknown as RadioSet);\n      })\n     });\n  }\n  updateRadio() {\n    this.type = this.equipment.type;\n    this.name = this.equipment.name;\n    this.amplitude = this.equipment.amplitude;\n    this.brand = this.equipment.brand;\n    this.id = this.equipment.id;\n    this.price = this.equipment.price;\n  }\n  dismiss() {\n    this.modalController.dismiss();\n  }\n  submit() {\n    if (this.id !== undefined) {\n      this.radio = new RadioSet(this.brand, this.name, this.type, this.amplitude, this.id, this.price);\n      \n      this.firebaseUpdaterAndSetter.updateRadioSet(this.radio);\n    } else {\n      this.id = \"placeholder\";\n      this.radio = new RadioSet(this.brand, this.name, this.type, this.amplitude, this.id, this.price);\n      if (this.isadmin) {\n        this.firebaseUpdaterAndSetter.setRadioSetAdmin(this.radio);\n      } else {\n        this.firebaseUpdaterAndSetter.setRadioSet(this.radio);\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RadioSetCRUDPagePage } from './radio-set-crudpage.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RadioSetCRUDPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RadioSetCRUDPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RadioSetCRUDPagePageRoutingModule } from './radio-set-crudpage-routing.module';\n\nimport { RadioSetCRUDPagePage } from './radio-set-crudpage.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RadioSetCRUDPagePageRoutingModule\n  ],\n  declarations: [RadioSetCRUDPagePage]\n})\nexport class RadioSetCRUDPagePageModule {}\n","export class RadioSet {\n    id?: string;\n    brand: string;\n    name: string;\n    type: string;\n    amplitude: string;\n    price?: number;\n    multiplier?: number;\n    isfavourite?: boolean = false;\n    constructor(brand: string, name: string, type: string, amplitude: string, id?: string, price?: number) {\n        this.id = id;\n        this.brand = brand;\n        this.name = name;\n        this.type = type;\n        this.amplitude = amplitude;\n        this.price = price;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyYWRpby1zZXQtY3J1ZHBhZ2UucGFnZS5zY3NzIn0= */\";"],"sourceRoot":"webpack:///"}