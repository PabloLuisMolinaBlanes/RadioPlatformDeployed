{"version":3,"sources":["./src/app/pages/radio-set-crudpage/radio-set-crudpage.page.html","./src/app/pages/radio-set-crudpage/radio-set-crudpage.page.ts","./src/app/pages/radio-set-crudpage/radio-set-crudpage-routing.module.ts","./src/app/pages/radio-set-crudpage/radio-set-crudpage.module.ts","./src/app/classes/radioset.ts","./src/app/pages/radio-set-crudpage/radio-set-crudpage.page.scss"],"names":[],"mappings":"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","file":"pages-radio-set-crudpage-radio-set-crudpage-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>RadioSetCRUDPage</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <p *ngIf=\\\"!(isadmin)\\\">Please, choose a radioset if it already exists</p>\\r\\n  <ion-item *ngIf=\\\"!(isadmin)\\\">\\r\\n    <ion-select [(ngModel)]=\\\"equipment\\\" (ionChange)=\\\"updateRadio()\\\" placeholder=\\\"Equipment\\\">\\r\\n      <ion-select-option *ngFor=\\\"let radioset of radioSetTotal\\\" [value]=\\\"radioset\\\">{{ radioset.name }}</ion-select-option>\\r\\n    </ion-select></ion-item>\\r\\n  <br>\\r\\n  <p>Brand</p>\\r\\n<ion-input [(ngModel)]=\\\"brand\\\"></ion-input>\\r\\n<p>Name</p>\\r\\n<ion-input [(ngModel)]=\\\"name\\\"></ion-input>\\r\\n<p>Type</p>\\r\\n<ion-input [(ngModel)]=\\\"type\\\"></ion-input>\\r\\n<p>Amplitude</p>\\r\\n<ion-input [(ngModel)]=\\\"amplitude\\\"></ion-input>\\r\\n<p>Price</p>\\r\\n<ion-input type=\\\"number\\\" [(ngModel)]=\\\"price\\\"></ion-input>\\r\\n<ion-button (click)=\\\"submit()\\\" *ngIf=\\\"brand && name && type && amplitude\\\">Submit</ion-button>\\r\\n<ion-button (click)=\\\"dismiss()\\\">Exit</ion-button>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport {FirebaseUpdaterAndSetterService} from '../../services/firebase-updater-and-setter.service';\r\nimport { RadioSet } from '../../classes/radioset';\r\nimport {ModalController} from '@ionic/angular'\r\nimport { FirebaseObtainerService } from '../../services/firebase-obtainer.service';\r\n@Component({\r\n  selector: 'app-radio-set-crudpage',\r\n  templateUrl: './radio-set-crudpage.page.html',\r\n  styleUrls: ['./radio-set-crudpage.page.scss'],\r\n})\r\nexport class RadioSetCRUDPagePage implements OnInit {\r\n@Input() brand: string = null;\r\n@Input() name: string = null;\r\n@Input() type: string = null;\r\n@Input() amplitude: string = null;\r\n@Input() radio: RadioSet = null;\r\n@Input() result: boolean = null;\r\n@Input() id?: string = undefined;\r\n@Input() price: number = null;\r\n@Input() isadmin: boolean;\r\nradioSetTotal: RadioSet[] = [];\r\nequipment: RadioSet;\r\n  constructor(private firebaseUpdaterAndSetter: FirebaseUpdaterAndSetterService, private firebaseObtainerService: FirebaseObtainerService, private modalController: ModalController) { }\r\n\r\n  ngOnInit() {\r\n    this.firebaseObtainerService.listAllRadioSets().then(ants => {\r\n      ants.forEach(ant => {\r\n        this.radioSetTotal.push(ant.val() as unknown as RadioSet);\r\n      })\r\n     });\r\n  }\r\n  updateRadio() {\r\n    this.type = this.equipment.type;\r\n    this.name = this.equipment.name;\r\n    this.amplitude = this.equipment.amplitude;\r\n    this.brand = this.equipment.brand;\r\n    this.id = this.equipment.id;\r\n    this.price = this.equipment.price;\r\n  }\r\n  dismiss() {\r\n    this.modalController.dismiss();\r\n  }\r\n  submit() {\r\n    if (this.id !== undefined) {\r\n      this.radio = new RadioSet(this.brand, this.name, this.type, this.amplitude, this.id, this.price);\r\n      \r\n      this.firebaseUpdaterAndSetter.updateRadioSet(this.radio);\r\n    } else {\r\n      this.id = \"placeholder\";\r\n      this.radio = new RadioSet(this.brand, this.name, this.type, this.amplitude, this.id, this.price);\r\n      if (this.isadmin) {\r\n        this.firebaseUpdaterAndSetter.setRadioSetAdmin(this.radio);\r\n      } else {\r\n        this.firebaseUpdaterAndSetter.setRadioSet(this.radio);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RadioSetCRUDPagePage } from './radio-set-crudpage.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RadioSetCRUDPagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RadioSetCRUDPagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RadioSetCRUDPagePageRoutingModule } from './radio-set-crudpage-routing.module';\r\n\r\nimport { RadioSetCRUDPagePage } from './radio-set-crudpage.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RadioSetCRUDPagePageRoutingModule\r\n  ],\r\n  declarations: [RadioSetCRUDPagePage]\r\n})\r\nexport class RadioSetCRUDPagePageModule {}\r\n","export class RadioSet {\r\n    id?: string;\r\n    brand: string;\r\n    name: string;\r\n    type: string;\r\n    amplitude: string;\r\n    price?: number;\r\n    multiplier?: number;\r\n    isfavourite?: boolean = false;\r\n    constructor(brand: string, name: string, type: string, amplitude: string, id?: string, price?: number) {\r\n        this.id = id;\r\n        this.brand = brand;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.amplitude = amplitude;\r\n        this.price = price;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyYWRpby1zZXQtY3J1ZHBhZ2UucGFnZS5zY3NzIn0= */\";"],"sourceRoot":"webpack:///"}